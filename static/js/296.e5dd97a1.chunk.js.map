{"version":3,"file":"static/js/296.e5dd97a1.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/Modal/Modal.jsx","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactsFilter/ContactsFilter.styled.js","components/ContactsFilter/ContactsFilter.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: grid;\n  justify-items: center;\n  gap: 14px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  margin-top: 5px;\n`;\n\nexport const Button = styled.button`\n  padding: 0.25em 1em;\n  cursor: pointer;\n  font-size: 20px;\n  font-weight: bold;\n`;\n","import './modal.css';\nimport React from 'react';\nimport { IoCloseCircleOutline } from 'react-icons/io5';\nimport PropTypes from 'prop-types';\n\nfunction Modal({ active, setActive, children }) {\n  return (\n    <div\n      className={active ? 'modal active' : 'modal'}\n      onClick={() => setActive(false)}\n    >\n      <div\n        className={active ? 'modal__content active' : 'modal__content'}\n        onClick={e => e.stopPropagation()}\n      >\n        <IoCloseCircleOutline\n          className=\"modal__close\"\n          onClick={() => setActive(false)}\n        />\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n\nModal.propTypes = {\n  active: PropTypes.bool,\n  setActive: PropTypes.func,\n  children: PropTypes.node.isRequired,\n};\n","import { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNewContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/selectors';\n\nimport { Button, Form, Input, Label } from './ContactForm.styled';\nimport Modal from 'components/Modal/Modal';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [modalActive, setModalActive] = useState(false);\n\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    contacts.some(contact => contact.name === name.trim(''))\n      ? alert(`${name} is already in your contacts`)\n      : dispatch(addNewContact({ name, number }));\n\n    setName('');\n    setNumber('');\n    setModalActive(false);\n  };\n\n  return (\n    <>\n      <Modal active={modalActive} setActive={setModalActive}>\n        <Form action=\"submit\" autoComplete=\"off\" onSubmit={handleSubmit}>\n          <Label htmlFor=\"name\">\n            <b>Name:</b>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter contact name\"\n              required\n              value={name}\n              onChange={handleChange}\n            />\n          </Label>\n          <Label htmlFor=\"number\">\n            <b>Number:</b>\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Enter contact number\"\n              required\n              value={number}\n              onChange={handleChange}\n            />\n          </Label>\n          <Button type=\"submit\">Add contact</Button>\n        </Form>\n      </Modal>\n      <Button\n        title=\"Click to open Modal\"\n        style={{ height: '60px' }}\n        type=\"button\"\n        onClick={() => setModalActive(true)}\n      >\n        âž• Add Contact\n      </Button>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { MdDelete, MdEdit } from 'react-icons/md';\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\nexport const Button = styled.button`\n  padding: 0.25em 1em;\n  cursor: pointer;\n  margin-left: 10px;\n`;\n\nexport const Delete = styled(MdDelete)`\n  width: 20px;\n  height: 20px;\n  margin: 0 10px 0 20px;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: red;\n  }\n`;\n\nexport const Edit = styled(MdEdit)`\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: #0000ff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { removeContact, editContact } from '../../redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\n\nimport { Delete, Edit, ListItem } from './ContactListItem.styled';\nimport Modal from 'components/Modal/Modal';\nimport { useState } from 'react';\nimport {\n  Form,\n  Button,\n  Input,\n  Label,\n} from 'components/ContactForm/ContactForm.styled';\n\nexport const ContactListItem = ({ id, name, number, i }) => {\n  const [modalActive, setModalActive] = useState(false);\n  const [editName, setEditName] = useState(name);\n  const [editNumber, setEditNumber] = useState(number);\n  const dispatch = useDispatch();\n\n  const handleEdit = e => {\n    e.preventDefault();\n    const editedContact = {\n      id,\n      name: editName,\n      number: editNumber,\n    };\n    dispatch(editContact(editedContact));\n    setModalActive(false);\n  };\n\n  return (\n    <>\n      <ListItem>\n        {name} : {number}\n        <div>\n          <Delete\n            title=\"Delete contact\"\n            type=\"button\"\n            onClick={() => dispatch(removeContact(id))}\n          />{' '}\n          <Edit title=\"Edit contact\" onClick={() => setModalActive(true)} />\n        </div>\n        <Modal active={modalActive} setActive={setModalActive}>\n          <Form action=\"submit\" autoComplete=\"off\" onSubmit={handleEdit}>\n            <Label htmlFor=\"name\">\n              <b>Name:</b>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter contact name\"\n                required\n                value={editName}\n                onChange={e => setEditName(e.target.value)}\n              />\n            </Label>\n            <Label htmlFor=\"number\">\n              <b>Number:</b>\n              <Input\n                type=\"tel\"\n                name=\"number\"\n                placeholder=\"Enter contact number\"\n                required\n                value={editNumber}\n                onChange={e => setEditNumber(e.target.value)}\n              />\n            </Label>\n            <Button type=\"submit\">\n              <b>Edit contact</b>\n            </Button>\n          </Form>\n        </Modal>\n      </ListItem>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  background-color: rgba(255, 255, 255, 0.9);\n`;\n\nexport const ErrorText = styled.b`\n  color: red;\n`;\n","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { ErrorText, List } from './ContactList.styled';\n\nimport { useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from '../../redux/selectors';\nimport { ThreeCircles } from 'react-loader-spinner';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      {isLoading && (\n        <ThreeCircles\n          visible={true}\n          height=\"40\"\n          width=\"40\"\n          color=\"black\"\n          ariaLabel=\"three-circles-loading\"\n        />\n      )}\n      {error && <ErrorText>{error}</ErrorText>}\n\n      {filteredContacts.length > 0 && (\n        <List>\n          {filteredContacts.map(({ id, name, number }) => {\n            return (\n              <ContactListItem key={id} id={id} name={name} number={number} />\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  margin-top: 5px;\n  border-radius: 3px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/filter/slice';\nimport { selectFilter } from '../../redux/selectors';\n\nimport { Label, Input } from './ContactsFilter.styled';\n\nexport const ContactsFilter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = ({ currentTarget: { value } }) => {\n    dispatch(filterContacts(value));\n  };\n\n  return (\n    <>\n      <Label htmlFor=\"filter\">\n        <b>Find contacts:</b>\n        <Input\n          type=\"text\"\n          placeholder=\"Enter contact name\"\n          name=\"filter\"\n          value={filter}\n          onChange={changeFilter}\n        />\n      </Label>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SectionWrapper = styled.section`\n  /* margin: auto; */\n  padding: 20px;\n  display: grid;\n  justify-content: center;\n  justify-items: center;\n  gap: 14px;\n`;\n\nexport const SectionHeader = styled.h2`\n  color: black;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionHeader, SectionWrapper } from './Section.styled';\n\nexport const ContactsSection = ({ title, children }) => {\n  return (\n    <SectionWrapper>\n      <SectionHeader>{title}</SectionHeader>\n      {children}\n    </SectionWrapper>\n  );\n};\n\nContactsSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactsFilter } from 'components/ContactsFilter/ContactsFilter';\nimport { ContactsSection } from 'components/Section/Section';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\n\nimport { ContactsPageWrapper } from 'App.styled';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsPageWrapper>\n      <ContactsSection>\n        <ContactForm />\n      </ContactsSection>\n      <ContactsSection>\n        <ContactsFilter />\n        <ContactList />\n      </ContactsSection>\n    </ContactsPageWrapper>\n  );\n}\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","_ref","active","setActive","children","_jsx","className","onClick","_jsxs","e","stopPropagation","IoCloseCircleOutline","ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","_useState5","_useState6","modalActive","setModalActive","contacts","useSelector","selectContacts","dispatch","useDispatch","handleChange","_ref$target","target","value","_Fragment","Modal","action","autoComplete","onSubmit","preventDefault","some","contact","trim","alert","concat","addNewContact","htmlFor","type","placeholder","required","onChange","title","style","height","ListItem","Delete","MdDelete","Edit","MdEdit","ContactListItem","id","i","editName","setEditName","editNumber","setEditNumber","removeContact","editedContact","editContact","List","ErrorText","ContactList","filteredContacts","selectFilteredContacts","error","selectError","isLoading","selectIsLoading","ThreeCircles","visible","width","color","ariaLabel","length","map","ContactsFilter","filter","selectFilter","currentTarget","filterContacts","SectionWrapper","SectionHeader","ContactsSection","ContactsPage","useEffect","fetchContacts","ContactsPageWrapper"],"sourceRoot":""}